$ env | grep ROS
$ rosnode list
$ rosnode info [node name]

# 初期化
$ catkin_init_workspace


# start master node
$ roscore

$ curl -O https://vision.in.tum.de/rgbd/dataset/freiburg1/rgbd_dataset_freiburg1_desk.bag
$ rosbag info [hoge.bag]
$ rosbag play [hoge.bag] -l
-l オプションは無限ループ再生

$ rostopic list
$ rostopic list -v

# rosrun [package] [node]
# rosrun image_view image_view image:=[your desired topic for image stream]
$ rosrun image_view image_view image:=/camera/depth/image

$ rostopic echo [topic]

# roslaunch [package] [launch file] 
$ roslaunch gazebo_ros empty_world.launch 


0.
$ mkdir -p ~/catkin_ws/src
$ cd ~/catkin_ws/src
$ catkin_init_workspace
$ source ~/catkin_ws/devel/setup.bash

1. 
# catkin_create_pkg [パッケージ名] [依存するパッケージ1]…[依存するパッケージn]
$ catkin_create_pkg my_first_ros_pkg std_msgs roscpp
package.xmlとCMakeLists.txtを含んだmy_first_ros_pkgフォルダを作っています

2. 
catkinでビルド(xml, CMakeLists.txtを用いて), $ cd ~/catkin_ws && catkin_make
ワークスペース中のすべてのパッケージのビルド
 -> node(実行可能ファイル)生成

3. 
rosrunでpackageのnodeを実行
$ roscore 
別のターミナルで$ rosrun [package] [node]
(2. 複数nodeを実行する場合, launchファイル使う $ roslaunch [package] [launch file])