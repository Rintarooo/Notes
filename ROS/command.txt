$ env | grep ROS
$ rosnode list
$ rosnode info [node name]


# start master node
$ roscore

$ curl -O https://vision.in.tum.de/rgbd/dataset/freiburg1/rgbd_dataset_freiburg1_desk.bag
$ rosbag info [hoge.bag]
$ rosbag play [hoge.bag] -l
-l オプションは無限ループ再生

$ rostopic list
$ rostopic list -v
$ rqt_graph

# rosrun [package] [node]
# rosrun image_view image_view image:=[your desired topic for image stream]
$ rosrun image_view image_view image:=/camera/depth/image

$ rostopic echo [topic]

# roslaunch [package] [launch file] 
$ roslaunch gazebo_ros empty_world.launch 


0.(ワークスペースの作成，1度実行すれば今後は実行する必要がない)
$ source /opt/ros/kinetic/setup.zsh
$ mkdir -p catkin_ws/src
$ cd catkin_ws/src
$ catkin_init_workspace

$ source /opt/ros/kinetic/setup.zsh


1. 
$ cd catkin_ws/src
# catkin_create_pkg [パッケージ名] [依存するパッケージ1]…[依存するパッケージn]
$ catkin_create_pkg my_first_ros_pkg std_msgs roscpp
パッケージ名・依存するパッケージをもとに、package.xmlとCMakeLists.txtを含んだcatkin_ws/src/my_first_ros_pkgフォルダを作成

2. 
$ s catkin_ws/src/my_first_ros_pkg/CMakeLists.txt

cmake_minimum_required(VERSION 2.8.3)
project(my_first_ros_pkg)
find_package(catkin REQUIRED COMPONENTS roscpp std_msgs)
catkin_package(INCLUDE_DIRS include
  CATKIN_DEPENDS roscpp std_msgs
  DEPENDS system_lib
)
include_directories( ${catkin_INCLUDE_DIRS})
add_executable(hello_world_node src/hello_world_node.cpp)
add_dependencies(hello_world_node my_first_ros_pkg_generate_messages_cpp)
target_link_libraries(hello_world_node ${catkin_LIBRARIES}) 

3.
$ s catkin_ws/src/my_first_ros_pkg/src/hello_world_node.cpp

4. 
catkinでビルド(xml, CMakeLists.txtを用いて)
$ cd catkin_ws && catkin_make
ワークスペース中のすべてのパッケージのビルド -> node(実行可能ファイル)生成
エラーがなくビルドが終了したら、「catkin_ws/devel/lib/my_first_ros_pkg」 に
「hello_world_node」という名前のファイルが生成されている。

5.
$ source devel/setup.zsh
$ echo $ROS_PACKAGE_PATH
/home/youruser/catkin_ws/src:/opt/ros/kinetic/share
source devel/setup.zshにより，パッケージのパスに/home/youruser/catkin_ws/srcが追加されていることを確認

6.
rosrunでpackageのnodeを実行
$ roscore 
別のターミナルで$ rosrun [package] [node]
$ rosrun my_first_ros_pkg hello_world_node

(複数nodeを同時に実行する場合, launchファイル使う
$ mkdir launch && cd launch 
$ s [launch file name].launch
$ roslaunch [launch file])
